$border-box-color: rgba(126, 70, 255, 0.8);
// $rg-color-beginning: rgb(220, 255, 206);
// $rg-color-ending: lightcyan;

$rg-color-beginning: #78d5ff;
$rg-color-ending: #0081e8;

// $bs-color: #e0e0e0;
$lg-color-beginning: #f1f1f1;
$lg-color-ending: #ffdddd;

body {
    margin: 0;
    padding: 0;
    overflow: hidden;
    min-height: 100vh;
    background: 
    radial-gradient($rg-color-beginning, $rg-color-ending);

}

.control-box {
    position: absolute;
    top: calc(40% - 175px);
    left: calc(50% - 100px);
    width: 200px;
    height: 350px;
    transform-style: preserve-3d;
    transform: perspective(1000px) rotateY(310deg);
}

.box {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    animation: animate-rotation 10s linear infinite;

    @keyframes animate-rotation {
        0% {
            // What is perspective for?
            transform: perspective(1000px) rotateX(0deg);
        }
        100% {
            transform: perspective(1000px) rotateX(359deg);
        }
    }
}

span {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    border: 1px solid $border-box-color;
    border-left: 2px solid $border-box-color;
    border-right: 2px solid $border-box-color;
    box-sizing: border-box;

    &:before, 
    &:after {
        content: '';
        position: absolute;
        width: 100%;
        height: 100px;
        border: 1px solid $border-box-color;
        box-sizing: border-box;
        background: 
        linear-gradient($lg-color-beginning, $lg-color-ending);
    }

    &:before {
        top: 0;
        left: 0;
    }

    &:after {
        bottom: 0;
        left: 0;
    }

    @for $i from 0 to 16 {
        &:nth-child(#{$i + 1}) {
            transform: rotateX(11.25deg * $i);
        }
    }
}
